
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.example.dynatrace_json_dashboard.all["deployment-automation-example.json"][0m will be created
[0m  [32m+[0m[0m resource "dynatrace_json_dashboard" "all" {
      [32m+[0m[0m contents = jsonencode(
            {
              [32m+[0m[0m dashboardMetadata = {
                  [32m+[0m[0m name  = "deployment-autmoation-example"
                  [32m+[0m[0m owner = "example@example.example.com"
                }
              [32m+[0m[0m tiles             = [
                  [32m+[0m[0m {
                      [32m+[0m[0m assignedEntities      = []
                      [32m+[0m[0m bounds                = {
                          [32m+[0m[0m height = 190
                          [32m+[0m[0m left   = 190
                          [32m+[0m[0m top    = 76
                          [32m+[0m[0m width  = 228
                        }
                      [32m+[0m[0m configured            = true
                      [32m+[0m[0m customName            = "Data explorer results"
                      [32m+[0m[0m isAutoRefreshDisabled = true
                      [32m+[0m[0m metricExpressions     = [
                          [32m+[0m[0m "resolution=null&(builtin:billing.events.business_events.ingest.usage:splitBy():sort(value(auto,descending)):limit(20)):limit(100):names",
                        ]
                      [32m+[0m[0m name                  = "Some Stuff"
                      [32m+[0m[0m queries               = [
                          [32m+[0m[0m {
                              [32m+[0m[0m enabled          = true
                              [32m+[0m[0m id               = "A"
                              [32m+[0m[0m limit            = 20
                              [32m+[0m[0m metric           = "builtin:billing.events.business_events.ingest.usage"
                              [32m+[0m[0m rate             = "NONE"
                              [32m+[0m[0m sortBy           = "DESC"
                              [32m+[0m[0m sortByDimension  = ""
                              [32m+[0m[0m spaceAggregation = "AUTO"
                              [32m+[0m[0m timeAggregation  = "DEFAULT"
                            },
                        ]
                      [32m+[0m[0m queriesSettings       = {
                          [32m+[0m[0m resolution = ""
                        }
                      [32m+[0m[0m query                 = ""
                      [32m+[0m[0m tileType              = "DATA_EXPLORER"
                      [32m+[0m[0m type                  = "NOT_CONFIGURED"
                      [32m+[0m[0m visualConfig          = {
                          [32m+[0m[0m axes                = {
                              [32m+[0m[0m xAxis = {
                                  [32m+[0m[0m displayName = ""
                                  [32m+[0m[0m visible     = true
                                }
                              [32m+[0m[0m yAxes = [
                                  [32m+[0m[0m {
                                      [32m+[0m[0m defaultAxis = true
                                      [32m+[0m[0m displayName = ""
                                      [32m+[0m[0m max         = "AUTO"
                                      [32m+[0m[0m min         = "AUTO"
                                      [32m+[0m[0m position    = "LEFT"
                                      [32m+[0m[0m queryIds    = [
                                          [32m+[0m[0m "A",
                                        ]
                                      [32m+[0m[0m visible     = true
                                    },
                                ]
                            }
                          [32m+[0m[0m heatmapSettings     = {
                              [32m+[0m[0m yAxis = "VALUE"
                            }
                          [32m+[0m[0m honeycombSettings   = {
                              [32m+[0m[0m showHive   = true
                              [32m+[0m[0m showLegend = true
                            }
                          [32m+[0m[0m rules               = [
                              [32m+[0m[0m {
                                  [32m+[0m[0m matcher    = "A:"
                                  [32m+[0m[0m properties = {
                                      [32m+[0m[0m color = "DEFAULT"
                                    }
                                },
                            ]
                          [32m+[0m[0m singleValueSettings = {
                              [32m+[0m[0m linkTileColorToThreshold = true
                              [32m+[0m[0m showSparkLine            = true
                              [32m+[0m[0m showTrend                = true
                            }
                          [32m+[0m[0m thresholds          = [
                              [32m+[0m[0m {
                                  [32m+[0m[0m axisTarget = "LEFT"
                                  [32m+[0m[0m rules      = [
                                      [32m+[0m[0m {
                                          [32m+[0m[0m color = "#7dc540"
                                        },
                                      [32m+[0m[0m {
                                          [32m+[0m[0m color = "#f5d30f"
                                        },
                                      [32m+[0m[0m {
                                          [32m+[0m[0m color = "#dc172a"
                                        },
                                    ]
                                  [32m+[0m[0m visible    = true
                                },
                            ]
                          [32m+[0m[0m type                = "GRAPH_CHART"
                        }
                      [32m+[0m[0m visualizationConfig   = {
                          [32m+[0m[0m hasAxisBucketing = true
                        }
                    },
                ]
            }
        )
      [32m+[0m[0m id       = (known after apply)
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
